{"version":3,"sources":["pages/FileStoragePage/FileItem/folder-icon.png","pages/FileStoragePage/svc/index.js","pages/FileStoragePage/utils/findNodeBy.js","shares/Spinner/Spinner.js","shares/LoadingContainer/LoadingContainer.js","pages/FileStoragePage/store.js","pages/FileStoragePage/FileExplorer/FileExplorerNode.js","pages/FileStoragePage/FileExplorer/FileExplorer.js","pages/FileStoragePage/Preview/TextPreview.js","pages/FileStoragePage/Preview/ImgPreview.js","pages/FileStoragePage/Preview/PdfPreview.js","pages/FileStoragePage/Preview/Preview.js","pages/FileStoragePage/FileRepresentation/FileRepresentation.js","pages/FileStoragePage/FileItem/FileItem.js","pages/FileStoragePage/Breadcrumb/Breadcrumb.js","pages/FileStoragePage/FileStoragePage.js","pages/FileStoragePage/index.js","constants.js","../node_modules/pdfjs-dist/build sync"],"names":["module","exports","showFolderTree","folderPath","a","depth","url","constants","AGENT_HOST","axios","get","resp","data","readFileContent","filePath","findNodeBy","treeRoot","predicate","childFolders","children","filter","node","isFile","foundNode","Spinner","overlay","className","type","color","height","width","LoadingContainer","useGlobal","loading","store","rootNode","path","name","currentFolder","previewing","previewContent","previewType","previewFileExt","FileExplorerNode","nodeOnClick","useState","showChild","setShowChild","clickNodeAndToggleShowChild","usingToggle","changeCurrenFolder","numChild","length","getItemBadge","onClick","getItemIcon","f","map","folder","i","key","toString","file","idx","FileExplorer","setRootNode","setCurrentFolder","setLoading","align","valign","nodeIsFile","nodeChildren","changeCurrentFolder","currentFolderInTree","utils","svc","then","finally","rootName","TextPreview","content","ImgPreview","base64src","src","alt","PdfPreview","numPages","setNumPages","onLoadSuccess","option","Array","fill","val","pageNumber","Preview","setPreviewing","toBase64","str","modalStatusClass","getModalClass","includes","aria-label","FileRepresentation","setPreviewContent","setPreviewType","setpreviewFileExt","itemSelected","setItemSelected","window","_clickTimeout","rows","arr","chunkLength","chunks","numChunk","Math","floor","chunk","id","shortid","generate","push","splitArrayIntoChunkWithLength","openItem","evt","item","stopPropagation","error","Error","isText","ext","openFile","updateNodeInRootNode","openFolder","nodeData","parrentNodePath","split","join","parrentNode","siblingAndCurFolderNodes","child","handleClick","itemPath","clearTimeout","selectItem","setTimeout","onKeyDown","Breadcrumb","row","isFolder","FileItem","getBaseName","getExt","folderIcon","extension","defaultStyles","size","breadcrumbItems","replace","idxFolder","folderParentNames","folderToGoName","folderToGoPath","folderToGoNode","goToFolder","FileStoragePage","useEffect","rootFolder","FILE_EXPLORER_ROOT","catch","e","setGlobal","webpackEmptyContext","req","code","keys","resolve"],"mappings":"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","file":"static/js/5.1244086a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/folder-icon.3cfe2265.png\";","import axios from 'axios'\n\nimport { constants } from '../vendors'\n\nexport async function showFolderTree(folderPath, depth = 3) {\n  const url = `${constants.AGENT_HOST}/file/structure?directory=${folderPath}&depth=${depth}`\n  const resp = await axios.get(url)\n  return resp.data\n}\n\nexport async function readFileContent(filePath) {\n  const url = `${constants.AGENT_HOST}/file/content?filePath=${filePath}`\n  const resp = await axios.get(url)\n  return resp.data\n}\n","export default function findNodeBy(treeRoot, predicate) {\n  if (predicate(treeRoot)) return treeRoot\n\n  const childFolders = treeRoot.children.filter(node => !node.isFile)\n  // find deeper level\n  for (const folder of childFolders) {\n    // eslint-disable-next-line no-undef\n    const foundNode = findNodeBy(folder, predicate)\n    if (foundNode) return foundNode\n  }\n\n  return null\n}\n","import React from 'react'\nimport Loader from 'react-loader-spinner'\nimport PropTypes from 'prop-types'\nimport './Spinner.scss'\n\nexport default function Spinner({ overlay }) {\n  return (\n    <div className=\"Spinner\">\n      {overlay && <div className=\"overlay\"></div>}\n      <Loader type=\"BallTriangle\" color=\"#81e6d9\" height={80} width={80} />\n    </div>\n  )\n}\n\nSpinner.propTypes = {\n  overlay: PropTypes.bool.isRequired\n}","import React, { useGlobal } from 'reactn'\nimport Spinner from '../Spinner'\n\nexport default function LoadingContainer() {\n  const [loading] = useGlobal('loading')\n  return (\n    <div className=\"LoadingContainer\">\n      {loading && <Spinner overlay />}\n    </div>\n  )\n}","const store = {\n  rootNode: {\n    isFile: false,\n    path: '/',\n    name: '',\n    children: [],\n  },\n  currentFolder: {\n    isFile: false,\n    path: '/a',\n    name: '',\n    children: [],\n  },\n  loading: false,\n  previewing: false,\n  previewContent: '',\n  previewType: 'text',\n  previewFileExt: '.txt'\n}\n\nexport default store\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport default function FileExplorerNode({\n  isFile,\n  name,\n  children,\n  nodeOnClick,\n  path,\n}) {\n  const [showChild, setShowChild] = useState(false)\n  function toggleShowChild() {\n    setShowChild(!showChild)\n  }\n\n  function clickNodeAndToggleShowChild(\n    usingToggle = false,\n    changeCurrenFolder = false\n  ) {\n    if (usingToggle || !showChild) toggleShowChild()\n    nodeOnClick(path, isFile, children, changeCurrenFolder)\n  }\n\n  function getListFileComponent() {\n    const listFile = children\n      .filter(() => showChild)\n      .filter(f => f.isFile)\n      .map((file, idx) => (\n        <FileExplorerNode\n          key={`file-${idx.toString()}`}\n          {...file}\n          nodeOnClick={nodeOnClick}\n        />\n      ))\n    return listFile\n  }\n\n  function getListFolderComponent() {\n    const listFolder = children\n      .filter(() => showChild)\n      .filter(f => !f.isFile)\n      .map((folder, i) => (\n        <FileExplorerNode\n          key={`folder-${i.toString()}`}\n          {...folder}\n          nodeOnClick={nodeOnClick}\n        />\n      ))\n    return listFolder\n  }\n\n  function getItemBadge() {\n    const numChild = children.length\n    if (isFile) return 'button switch center_docu'\n\n    return numChild && showChild\n      ? 'button switch roots_open'\n      : 'button switch center_close'\n  }\n\n  function getItemIcon() {\n    const numChild = children.length\n    if (isFile) return 'button ico_docu'\n\n    return numChild && showChild ? 'button ico_open' : 'button ico_close'\n  }\n\n  return (\n    <li>\n      <span\n        className={getItemBadge()}\n        onClick={() => clickNodeAndToggleShowChild(true)}\n      ></span>\n      <span className=\"link\" onClick={() => clickNodeAndToggleShowChild(false, true)}>\n        <span className={getItemIcon()}></span>\n        <span className=\"node_name\">{name}</span>\n      </span>\n      <ul className=\"line\">\n        {getListFolderComponent()}\n        {getListFileComponent()}\n      </ul>\n    </li>\n  )\n}\n\nFileExplorerNode.propTypes = {\n  isFile: PropTypes.bool.isRequired,\n  name: PropTypes.string.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  children: PropTypes.array.isRequired,\n  nodeOnClick: PropTypes.func.isRequired,\n  path: PropTypes.string.isRequired,\n}\n","import React from 'react'\nimport { useGlobal } from 'reactn'\n\nimport {svc, utils} from '../vendors'\nimport FileExplorerNode from './FileExplorerNode'\nimport './FileExplorer.scss'\n\nexport default function FileExplorer() {\n  const [rootNode, setRootNode] = useGlobal('rootNode')\n  const [, setCurrentFolder] = useGlobal('currentFolder')\n  const [, setLoading] = useGlobal('loading')\n\n  function exploreFolder(\n    path,\n    nodeIsFile,\n    nodeChildren,\n    changeCurrentFolder = false\n  ) {\n    if (nodeIsFile) return\n\n    setLoading(true)\n    const currentFolderInTree = utils.findNodeBy(rootNode, node => node.path === path)\n    if (nodeChildren && nodeChildren.length) {\n      if (changeCurrentFolder) setCurrentFolder(currentFolderInTree)\n      setLoading(false)\n      return\n    }\n    svc.showFolderTree(path, 2).then(resp => {\n      currentFolderInTree.children = [...resp.children]\n      setRootNode({ ...rootNode })\n      if (changeCurrentFolder) setCurrentFolder(resp)\n    })\n    .finally(() => setLoading(false))\n  }\n\n  return (\n    <table className=\"FileExplorer\">\n      <tbody>\n        <tr>\n          <td width=\"260px\" align=\"left\" valign=\"top\">\n            <ul className=\"ztree\">\n              <FileExplorerNode\n                // {...rootNode}\n                // eslint-disable-next-line react/no-children-prop\n                children={rootNode.children}\n                path={rootNode.path}\n                name={rootNode.name}\n                isFile={rootNode.isFile}\n                nodeOnClick={exploreFolder}\n                rootName=\"/\"\n              />\n            </ul>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport './TextPreview.scss'\n\nexport default function TextPreview({ content }) {\n  return <div className=\"TextPreview\">{content}</div>\n}\n\nTextPreview.propTypes = {\n  content: PropTypes.string.isRequired\n}","import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport default function ImgPreview({base64src}) {\n  return (\n    <p className=\"image is-4by3\">\n      <img src={base64src} alt=\"\" />\n    </p>\n  )\n}\n\nImgPreview.propTypes = {\n  base64src: PropTypes.string.isRequired\n}","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n// import {Document, Page} from 'react-pdf'\n\nimport { Document, Page } from 'react-pdf/dist/entry.webpack'\n\nexport default function PdfPreview({ base64src }) {\n  const [numPages, setNumPages] = useState(0)\n\n  return (\n    <Document\n      file={base64src}\n      onLoadSuccess={option => setNumPages(option.numPages)}\n    >\n      {new Array(numPages).fill(null).map((val, idx) => (\n        <Page key={`page_${idx + 1}`} pageNumber={idx + 1} />\n      ))}\n    </Document>\n  )\n}\n\nPdfPreview.propTypes = {\n  base64src: PropTypes.string.isRequired,\n}\n","import React from 'react'\nimport { useGlobal } from 'reactn'\nimport 'react-pdf/dist/Page/AnnotationLayer.css'\n\nimport TextPreview from './TextPreview'\nimport ImgPreview from './ImgPreview'\nimport PdfPreview from './PdfPreview'\nimport './Preview.scss'\n\n\nexport default function Preview() {\n  const [previewing, setPreviewing] = useGlobal('previewing')\n  const [previewContent] = useGlobal('previewContent')\n  const [previewType] = useGlobal('previewType')\n  const [previewFileExt] = useGlobal('previewFileExt')\n\n  function toBase64(str) {\n    return `data:image/png;base64, ${str}`\n  }\n\n  function getModalClass() {\n    const baseClass = 'Preview modal'\n    const modalStatusClass = previewing ? 'is-active' : ''\n\n    return `${baseClass} ${modalStatusClass}`\n  }\n\n  function isTextType() {\n    return previewType === 'text'\n  }\n\n  function isImgType() {\n    if (!previewType === 'base64') return false\n    const imgExtList = ['.png', '.jpeg', '.jpg']\n    return imgExtList.includes(previewFileExt)\n  }\n\n  function isPdfType() {\n    return previewType === 'base64' && previewFileExt === '.pdf'\n  }\n\n  return (\n    <div className={getModalClass()}>\n      <div className=\"modal-background\"></div>\n      <div className=\"modal-content\">\n        {isTextType() && <TextPreview content={previewContent} />}\n        {isImgType() && <ImgPreview base64src={toBase64(previewContent)} />}\n        {isPdfType() && <PdfPreview base64src={toBase64(previewContent)} />}\n      </div>\n      <button\n        type=\"button\"\n        className=\"modal-close is-large\"\n        aria-label=\"close\"\n        onClick={() => setPreviewing(false)}\n      ></button>\n    </div>\n  )\n}\n","/* eslint-disable no-underscore-dangle */\nimport React, { useState } from 'react'\nimport { useGlobal } from 'reactn'\nimport shortid from 'shortid'\n\nimport { FileItem, svc, Breadcrumb, utils } from '../vendors'\nimport './FileRepresentation.scss'\n\nexport default function FileRepresentation() {\n  const [rootNode, setRootNode] = useGlobal('rootNode')\n  const [currentFolder, setCurrentFolder] = useGlobal('currentFolder')\n  const [, setLoading] = useGlobal('loading')\n  const [, setPreviewing] = useGlobal('previewing')\n  const [, setPreviewContent] = useGlobal('previewContent')\n  const [, setPreviewType] = useGlobal('previewType')\n  const [, setpreviewFileExt] = useGlobal('previewFileExt')\n  const [itemSelected, setItemSelected] = useState([])\n  if (!window._clickTimeout) window._clickTimeout = {}\n\n  const NUM_ITEM_PER_ROW = 6\n  const fileOrFolders = currentFolder.children\n  const rows = splitArrayIntoChunkWithLength(fileOrFolders, NUM_ITEM_PER_ROW)\n\n  function splitArrayIntoChunkWithLength(arr, chunkLength) {\n    const chunks = []\n    const numChunk = Math.floor(\n      arr.length % chunkLength === 0\n        ? arr.length / chunkLength\n        : arr.length / chunkLength + 1\n    )\n\n    // eslint-disable-next-line no-plusplus\n    for (let i = 0; i < numChunk; ++i) {\n      const chunk = arr.filter(\n        (val, idx) => Math.floor(idx / chunkLength) === i\n      )\n\n      if (chunk.length) {\n        chunk.id = shortid.generate()\n        chunks.push(chunk)\n      }\n    }\n    return chunks\n  }\n\n  function selectItem(evt, item) {\n    evt.stopPropagation()\n    setItemSelected([item])\n  }\n\n  function deSelectAllItem() {\n    setItemSelected([])\n  }\n\n  function openItem(evt, item) {\n    evt.stopPropagation()\n    if (item.isFile) {\n      openFile(item)\n      return\n    }\n\n    if (!item.isFile) {\n      openFolder(item)\n    }\n  }\n\n  function openFile(item) {\n    setPreviewing(true)\n    svc.readFileContent(item.path).then(resp => {\n      if (resp.error) throw new Error(resp.error)\n      setPreviewContent(resp.content)\n      setPreviewType(resp.isText ? 'text' : 'base64')\n      setpreviewFileExt(resp.ext)\n    })\n  }\n\n  function openFolder(item) {\n    if (item.children.length) {\n      setCurrentFolder(item)\n      updateNodeInRootNode(item)\n      return\n    }\n\n    setLoading(true)\n    svc\n      .showFolderTree(item.path, 2)\n      .then(resp => {\n        setCurrentFolder(resp)\n        updateNodeInRootNode(resp)\n      })\n      .finally(() => setLoading(false))\n  }\n\n  function updateNodeInRootNode(nodeData) {\n    if (nodeData.path === rootNode.path) return\n    const parrentNodePath = nodeData.path\n      .split('/')\n      .filter((val, idx, arr) => idx !== arr.length - 1)\n      .join('/')\n    const parrentNode = utils.findNodeBy(\n      rootNode,\n      node => node.path === parrentNodePath\n    )\n    const siblingAndCurFolderNodes = parrentNode.children.map(child => {\n      if (child.path === nodeData.path) return nodeData\n      return child\n    })\n\n    parrentNode.children = [...siblingAndCurFolderNodes]\n    setRootNode(rootNode)\n  }\n\n  function handleClick(evt, item) {\n    const itemPath = item.path\n    const timeDefineDbClick = 200\n\n    if (!window._clickTimeout[itemPath]) {\n      selectItem(evt, item)\n      window._clickTimeout[itemPath] = setTimeout(() => {\n        clearTimeout(window._clickTimeout[itemPath])\n        window._clickTimeout[itemPath] = null\n      }, timeDefineDbClick)\n    } else {\n      openItem(evt, item)\n      clearTimeout(window._clickTimeout[itemPath])\n      window._clickTimeout[itemPath] = null\n    }\n  }\n\n  return (\n    <div\n      className=\"FileRepresentation\"\n      onClick={() => deSelectAllItem()}\n      onKeyDown={() => {}}\n    >\n      <Breadcrumb />\n      {rows.map(row => (\n        <div className=\"columns\" key={row.id}>\n          {row.map(item => (\n            <div\n              key={item.path}\n              className={\n                itemSelected.includes(item) ? 'column item-selected' : 'column'\n              }\n              onClick={evt => handleClick(evt, item)}\n              onKeyDown={() => {}}\n            >\n              <div>\n                <FileItem itemPath={item.path} isFolder={!item.isFile} />\n              </div>\n            </div>\n          ))}\n          {// the rest part to make sure each row have enough\n          new Array(NUM_ITEM_PER_ROW - row.length).fill().map(() => (\n            <div key={shortid.generate()} className=\"column\" />\n          )) //\n          }\n        </div>\n      ))}\n    </div>\n  )\n}\n","import React from 'react'\nimport FileIcon, { defaultStyles } from 'react-file-icon'\nimport PropTypes from 'prop-types'\n\nimport folderIcon from './folder-icon.png'\nimport './FileItem.scss'\n\nexport default function FileItem({ itemPath, isFolder }) {\n  const iconSize = 55\n  const name = getBaseName(itemPath)\n  const ext = getExt(name)\n  \n  function getExt(name) {\n    const chunks = name.split('.')\n    return chunks.length > 1 ? chunks[chunks.length - 1] : ''\n  }\n\n  function getBaseName(path) {\n    const chunks = path.split('/')\n    return chunks[chunks.length - 1 ]\n  }\n\n  return (\n    <div className=\"FileItem\">\n      {isFolder && <img src={folderIcon} height={iconSize} width={iconSize} alt=\"folder\" />}\n      {!isFolder && (\n        <FileIcon extension={ext} {...defaultStyles[ext]} size={iconSize} />\n      )}\n      <div className=\"file-detail\">\n        <small>{name}</small>\n      </div>\n    </div>\n  )\n}\n\nFileItem.propTypes = {\n  itemPath: PropTypes.string.isRequired,\n  isFolder: PropTypes.bool.isRequired,\n}\n","/* eslint-disable jsx-a11y/anchor-has-content */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react'\nimport { useGlobal } from 'reactn'\n\nimport { utils } from '../vendors'\n\nexport default function Breadcrumb() {\n  const [rootNode] = useGlobal('rootNode')\n  const [currentFolder, setCurrentFolder] = useGlobal('currentFolder')\n\n  const curFolderRelativePath = currentFolder.path.replace(rootNode.path, '')\n  const breadcrumbItems = curFolderRelativePath.split('/').filter(i => i)\n\n  function goToFolder(idxFolder) {\n    const folderParentNames = breadcrumbItems.filter((item, i) => i < idxFolder)\n    const folderToGoName = breadcrumbItems[idxFolder]\n    const folderToGoPath = [\n      rootNode.path,\n      ...folderParentNames,\n      folderToGoName,\n    ].join('/')\n    const folderToGoNode = utils.findNodeBy(\n      rootNode,\n      f => f.path === folderToGoPath\n    )\n    setCurrentFolder(folderToGoNode)\n  }\n\n  function ExtraSlash() {\n    return (\n      <>\n        <li>\n          <a></a>\n        </li>\n        {breadcrumbItems.length === 0 && (\n          <li>\n            <a></a>\n          </li>\n        )}\n      </>\n    )\n  }\n\n  return (\n    <nav className=\"breadcrumb\" aria-label=\"breadcrumbs\">\n      <ul>\n        {breadcrumbItems.map((item, idx) => (\n          <li key={item} onClick={() => goToFolder(idx)}>\n            <a>{item}</a>\n          </li>\n        ))}\n        <ExtraSlash />\n      </ul>\n    </nav>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { setGlobal, useGlobal } from 'reactn'\n\nimport {\n  FileExplorer,\n  FileRepresentation,\n  svc,\n  constants,\n  LoadingContainer,\n  Preview,\n  store,\n} from './vendors'\nimport './FileStoragePage.scss'\n\n\nsetGlobal(store)\nexport default function FileStoragePage() {\n  const [, setRootNode] = useGlobal('rootNode')\n  const [, setCurrentFolder] = useGlobal('currentFolder')\n  const [, setLoading] = useGlobal('loading')\n\n  useEffect(() => {\n    const rootFolder = constants.FILE_EXPLORER_ROOT\n    setLoading(true)\n    svc\n      .showFolderTree(rootFolder, 3)\n      .then(resp => {\n        setRootNode(resp)\n        setCurrentFolder(resp)\n      })\n      .catch(e => e)\n      .finally(() => setLoading(false))\n  }, [])\n\n  return (\n    <div className=\"FileStoragePage\">\n      <FileExplorer />\n      <FileRepresentation />\n      <LoadingContainer />\n      <Preview />\n    </div>\n  )\n}\n","export { default } from './FileStoragePage'\n","export const AGENT_HOST = '/api'\nexport const FILE_EXPLORER_ROOT = '/home/bmq928/Documents'","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 55;"],"sourceRoot":""}